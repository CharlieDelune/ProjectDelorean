using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class TownDayEnterEventTrigger : AbstractEventController {
	public GameObject bhirtObject;
	public GameObject catObject;
	public GameObject eiraObject;
	public GameObject garfObject;
	public GameObject kodaObject;
	public GameObject valdisObject;
	public Sprite bhirtHead;
	public Sprite catHead;
	public Sprite eiraHead;
	public Sprite garfHead;
	public Sprite kodaHead;
	public Sprite valdisHead;
	public GameObject blockerToActivate;
	public override IEnumerator EventCoroutine(){
		GameObject[] fullParty = {bhirtObject,catObject,eiraObject,garfObject,kodaObject,valdisObject};
		player.StopMovement();
		PlayAnimationPersistent(fullParty,"IdleRight");
		StartCoroutine(MoveObject(bhirtObject,Direction.Right));
		StartCoroutine(MoveObject(catObject,Direction.Right));
		StartCoroutine(MoveObject(eiraObject,Direction.Right));
		StartCoroutine(MoveObject(garfObject,Direction.Right));
		StartCoroutine(MoveObject(kodaObject,Direction.Right));
		StartCoroutine(MoveObject(valdisObject,Direction.Right));
		yield return StartCoroutine(MoveObject(player.gameObject,Direction.Right));
		StartCoroutine(MoveObject(bhirtObject,Direction.Right));
		StartCoroutine(MoveObject(catObject,Direction.Right));
		StartCoroutine(MoveObject(eiraObject,Direction.Right));
		StartCoroutine(MoveObject(garfObject,Direction.Right));
		StartCoroutine(MoveObject(kodaObject,Direction.Right));
		StartCoroutine(MoveObject(valdisObject,Direction.Right));
		yield return StartCoroutine(MoveObject(player.gameObject,Direction.Right));
		StartCoroutine(MoveObject(bhirtObject,Direction.Right));
		StartCoroutine(MoveObject(catObject,Direction.Right));
		StartCoroutine(MoveObject(eiraObject,Direction.Right));
		StartCoroutine(MoveObject(garfObject,Direction.Right));
		StartCoroutine(MoveObject(kodaObject,Direction.Right));
		StartCoroutine(MoveObject(valdisObject,Direction.Right));
		yield return StartCoroutine(MoveObject(player.gameObject,Direction.Right));
		yield return StartCoroutine(ShowDialogue("Wow, this is wild...", "Mason",masonHead));
		yield return StartCoroutine(ShowDialogue("You've never been to the same place in two different times?", "Bhirt",bhirtHead));
		yield return StartCoroutine(ShowDialogue("Well, I mean, I <i>have</i>... But not so close together. The change wasn't so ... notable.", "Mason",masonHead));
		yield return StartCoroutine(ShowDialogue("You've never seen the stakes so clearly before.", "Garf",garfHead));
		yield return StartCoroutine(ShowDialogue("Yeah...", "Mason",masonHead));
		yield return StartCoroutine(ShowDialogue("Hm. Let's not waste time, then.", "Valdis",valdisHead));
		yield return StartCoroutine(ShowDialogue("Valdis is right. Let's spread out and see if we can gather information.", "Eira",eiraHead));
		yield return StartCoroutine(ShowDialogue("Okay. I'll check in with you all in a bit.", "Mason",masonHead));
		yield return StartCoroutine(FadeOut());
		DeleteObject(catObject);
		SetObjectPosition(eiraObject,new Vector3(14.5f,1.42f, 1.5f));
		PlayAnimationPersistent(eiraObject,"IdleUp");
		SetObjectPosition(valdisObject,new Vector3(28.0f,1.42f, 1.0f));
		PlayAnimationPersistent(valdisObject,"IdleRight");
		SetObjectPosition(bhirtObject,new Vector3(31.5f,1.42f, -5.0f));
		PlayAnimationPersistent(bhirtObject,"IdleLeft");
		SetObjectPosition(garfObject,new Vector3(27.5f,0.32f, -16.5f));
		PlayAnimationPersistent(garfObject,"IdleRight");
		SetObjectPosition(kodaObject,new Vector3(30.5f,0.32f, -31.5f));
		PlayAnimationPersistent(kodaObject,"IdleLeft");
		SetPartyMemberAvailable(party.GetUnitStats("Bhirt"),false);
		SetPartyMemberAvailable(party.GetUnitStats("Eira"),false);
		SetPartyMemberAvailable(party.GetUnitStats("Garf"),false);
		SetPartyMemberAvailable(party.GetUnitStats("Koda"),false);
		SetPartyMemberAvailable(party.GetUnitStats("Valdis"),false);
		SetPartyMemberAvailable(party.GetUnitStats("Cat"),true);
		yield return StartCoroutine(FadeIn());
		SetObjectActive(blockerToActivate,true);
		yield return StartCoroutine(ShowDialogue("I guess I'll find the mayor and convince him to evacuate.", "Mason",masonHead));
		EndEventCoroutine();
	}
}
